name: "Build Inbox Zero Docker Image"
run-name: "Build Inbox Zero Docker Image"

on:
  push:
    branches: [ "newTrial" ]

env:
  DOCKER_IMAGE_REGISTRY: "ghcr.io"
  DOCKER_USERNAME: "gowthamkishore3799"

jobs:
  set-version:
    if: github.repository == 'gowthamkishore3799/inbox-zero'
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Version
        id: get_version
        run: |
          version=$(cat version.txt | tr -d '\r')
          echo "version=$version" >> $GITHUB_OUTPUT

  build-frontend:
    name: "Build Docker Image"
    runs-on: ubuntu-latest
    needs:
      - set-version

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_IMAGE_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./apps/web
          file: docker/Dockerfile.web
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ env.DOCKER_USERNAME }}/inbox-zero:latest
            ghcr.io/${{ env.DOCKER_USERNAME }}/inbox-zero:${{ needs.set-version.outputs.version }}

  update_version_txt:
    needs:
      - set-version
      - build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update tag
        id: update_tag
        shell: bash
        run: |
          echo " ==== ${{needs.set-version.outputs.version}} ==== "
          NEW_TAG="${{ needs.set-version.outputs.version }}"
          git tag ${NEW_TAG}

      - name: Bump version
        id: bump_version
        shell: bash
        run: |
          set -x
          version="${{needs.set-version.outputs.version}}""
          IFS='.' read -r -a version_parts <<< "$version"

          for i in {0..2}; do
            echo "${version_parts[$i]} Message"
            version_parts[$i]=${version_parts[$i]:-0}
          done

          ((version_parts[2]++))

          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          echo "$new_version" > version.txt
          echo "new_version=${new_version}" >> "$GITHUB_OUTPUT"

      - name: Commit updated version file
        shell: bash
        run: |
          git config --local user.email "github-actions@inbox-zero.com"
          git config --local user.name "github-actions"
          git commit -a -m "Update base version to ${{steps.update_version.outputs.new_version}}"
          echo " Version updated to ${{steps.update_version.outputs.new_version}} on main" >> $GITHUB_STEP_SUMMARY

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.PASSWORD }}
          force_with_lease: true
          tags: true