# Base image
FROM node:22-alpine AS base

WORKDIR /app

# Install necessary tools
RUN apk add --no-cache openssl \
    && npm install -g pnpm

# Install Dependencies First (Efficient Caching)
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml .npmrc* ./
COPY apps/web/package.json apps/web/
COPY apps/unsubscriber/package.json apps/unsubscriber/
COPY apps/mcp-server/package.json apps/mcp-server/
COPY packages/eslint-config/package.json packages/eslint-config/
COPY packages/loops/package.json packages/loops/
COPY packages/resend/package.json packages/resend/
COPY packages/tinybird/package.json packages/tinybird/
COPY packages/tinybird-ai-analytics/package.json packages/tinybird-ai-analytics/
COPY packages/tsconfig/package.json packages/tsconfig/

# Install only dependencies
RUN pnpm install --frozen-lockfile --prefer-offline --ignore-scripts

COPY . .

# Copy application code separately (this avoids breaking cache if code changes)

RUN ls -la

# Run Prisma generate with build-time variables (cached)
RUN pnpm --filter inbox-zero-ai exec -- prisma generate

# Build Next.js with cache optimization
RUN pnpm --filter inbox-zero-ai exec -- next build

# Production Image
FROM node:22-alpine AS production

WORKDIR /app

# Copy necessary files from the base image
COPY --from=base /app /app

# Set NODE_ENV for runtime
ENV NODE_ENV=production

ENV DATABASE_URL="postgresql://dummy:dummy@dummy:5432/dummy?schema=public"
ENV DIRECT_URL="postgresql://dummy:dummy@dummy:5432/dummy?schema=public"
ENV NEXTAUTH_SECRET="dummy_secret_for_build_only"
ENV NEXTAUTH_URL="http://localhost:3000"
ENV GOOGLE_CLIENT_ID="dummy_id_for_build_only"
ENV GOOGLE_CLIENT_SECRET="dummy_secret_for_build_only"
ENV GOOGLE_ENCRYPT_SECRET="dummy_encrypt_secret_for_build_only"
ENV GOOGLE_ENCRYPT_SALT="dummy_encrypt_salt_for_build_only"
ENV GOOGLE_PUBSUB_TOPIC_NAME="dummy_topic_for_build_only"
ENV GOOGLE_PUBSUB_VERIFICATION_TOKEN="dummy_pubsub_token_for_build"
ENV INTERNAL_API_KEY="dummy_apikey_for_build_only"
ENV API_KEY_SALT="dummy_salt_for_build_only"
ENV UPSTASH_REDIS_URL="http://dummy-redis-for-build:6379"
ENV UPSTASH_REDIS_TOKEN="dummy_redis_token_for_build"
ENV REDIS_URL="redis://dummy:dummy@dummy:6379"
ENV QSTASH_TOKEN="dummy_qstash_token_for_build"
ENV QSTASH_CURRENT_SIGNING_KEY="dummy_qstash_curr_key_for_build"
ENV QSTASH_NEXT_SIGNING_KEY="dummy_qstash_next_key_for_build"
ENV NEXT_PUBLIC_SANITY_PROJECT_ID="project123"
ENV NEXT_PUBLIC_SANITY_DATASET="dummy-sanity-dataset-for-build"

# Expose port 3000
EXPOSE 3000

# Start the application
CMD ["pnpm", "--filter", "inbox-zero-ai", "start"]
