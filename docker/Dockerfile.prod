FROM node:22-alpine

WORKDIR /app

# Install necessary tools
RUN apk add --no-cache openssl
RUN npm install -g pnpm

# Copy all package manager files first for caching
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml .npmrc* ./
COPY apps/web/package.json apps/web/
COPY apps/unsubscriber/package.json apps/unsubscriber/
COPY apps/mcp-server/package.json apps/mcp-server/
COPY packages/eslint-config/package.json packages/eslint-config/
COPY packages/loops/package.json packages/loops/
COPY packages/resend/package.json packages/resend/
COPY packages/tinybird/package.json packages/tinybird/
COPY packages/tinybird-ai-analytics/package.json packages/tinybird-ai-analytics/
COPY packages/tsconfig/package.json packages/tsconfig/

# Copy the rest of the application code FIRST
COPY . .

# Install ALL dependencies (including dev, no pruning)
# This will now run postinstall scripts *after* source code is copied
RUN pnpm install --frozen-lockfile

# Set NODE_ENV for build and runtime
ENV NODE_ENV=production

# Ensure prisma generate runs
RUN pnpm --filter inbox-zero-ai exec -- prisma generate

# Build the Next.js application only (skip prisma migrate deploy during build)
RUN pnpm --filter inbox-zero-ai exec -- next build

# Expose port 3000
EXPOSE 3000

CMD pnpm --filter inbox-zero-ai start